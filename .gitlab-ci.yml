variables:
  APP_NAME: "indeema_ci_front"
  DEPLOY_PATH: "/home/indeema/Indeema"
  BACKUP_PATH: "/home/indeema/Indeema/backups"
  URL_DEV: "http://198.199.125.240:4200"
  HOST_DEV: "indeema@198.199.125.240"
#Project deploy variables

#######################################################################################################
##!!!Important!!! Do not change the following code start from line 10 if you don`t know how it works!##
#######################################################################################################
stages:
  - install
  - setup
  - helthcheck
  - restore
#Jobs templates
.job_install: &tpl_install
  stage: install
  script:
    - echo "Install dependencies"
    - npm install
    - echo "Build project"
    - ng build --prod
    - echo "Compress build folder"
    - cp -r ./dist/*/* ./dist/
    - tar -czf $APP_NAME.tar.gz ./dist
    - echo "Create project folder on server, where all resources will be copy to"
    - ssh -o StrictHostKeyChecking=no $HOST -t "mkdir -p $DEPLOY_PATH/$APP_NAME"
    - echo "Upload build archive to server"
    - scp -o StrictHostKeyChecking=no $APP_NAME.tar.gz $HOST:/tmp
.job_launch: &tpl_setup
  stage: setup
  script:
    - echo "Make backup, uncompress project, remove archive"
    - ssh -o StrictHostKeyChecking=no $HOST -t "mkdir -p $BACKUP_PATH;
        rm -rf $BACKUP_PATH/$APP_NAME;
        mv $DEPLOY_PATH/$APP_NAME $BACKUP_PATH/;
        mkdir -p $DEPLOY_PATH/$APP_NAME;
        cd $DEPLOY_PATH/$APP_NAME;
        tar -xzf /tmp/$APP_NAME.tar.gz;
        rm -fr /tmp/$APP_NAME.tar.gz"
.job_helthcheck: &tpl_helthcheck
  stage: helthcheck
  script:
    - curl $URL --connect-timeout 10 -s -f -o /dev/null && echo 'Success! UI is working' || echo "Error! UI is not answering on $URL"
    - curl $URL --connect-timeout 10 -s -f -o /dev/null || exit 1
.job_restore: &tpl_restore
  stage: restore
  script:
    - echo "Restore from previous version"
    - ssh -o StrictHostKeyChecking=no $HOST -t "rm -fr $DEPLOY_PATH/$APP_NAME;
        mv $BACKUP_PATH/$APP_NAME $DEPLOY_PATH/$APP_NAME;"
  when: on_failure
#Stages for devevelopment
development install:
  variables:
    HOST: $HOST_DEV
  environment:
    name: development
    url: $URL_DEV
  tags:
    - web
  only:
    - ci_web_settings
  <<: *tpl_install
development setup:
  variables:
    HOST: $HOST_DEV
  environment:
    name: development
    url: $URL_DEV
  tags:
    - web
  only:
    - ci_web_settings
  <<: *tpl_setup
development helthcheck:
  variables:
    URL: $URL_DEV
  environment:
    name: development
    url: $URL_DEV
  tags:
    - web
  only:
    - ci_web_settings
  <<: *tpl_helthcheck
development restore:
  variables:
    HOST: $HOST_DEV
  environment:
    name: development
    url: $URL_DEV
  tags:
    - web
  only:
    - ci_web_settings
  <<: *tpl_restore
#Stages for production
production install:
  variables:
    HOST: $HOST_PROD
  environment:
    name: production
    url: $URL_PROD
  tags:
    - web
  only:
    - production
  <<: *tpl_install
production setup:
  variables:
    HOST: $HOST_PROD
  environment:
    name: production
    url: $URL_PROD
  tags:
    - web
  only:
    - production
  <<: *tpl_setup
production helthcheck:
  variables:
    URL: $URL_PROD
  environment:
    name: production
    url: $URL_PROD
  tags:
    - web
  only:
    - production
  <<: *tpl_helthcheck
production restore:
  variables:
    HOST: $HOST_PROD
  environment:
    name: production
    url: $URL_PROD
  tags:
    - web
  only:
    - production
  <<: *tpl_restore
